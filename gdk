#!/bin/bash

TZ=${TZ:-"Europe/Warsaw"}
GDK_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
SRC_PATH="${GDK_PATH}/src"

cont_name="gdk"

gdk_container_stop() {
    docker ps    | grep " ${cont_name}" >/dev/null && docker stop ${cont_name} >/dev/null
    docker ps -a | grep " ${cont_name}" >/dev/null && docker rm   ${cont_name} >/dev/null
}

gdk_container_start() {
    gdk_container_stop

    mkdir -p ${PWD}/src

    docker run --rm -ti --name ${cont_name} \
        -e "TZ=${TZ}"                       \
        -v ${GDK_PATH}/src:/home/git/src    \
        -p 172.17.42.1:80:3000              \
        -p 172.17.42.1:22222:22             \
        tmaczukin/gitlab-dev                \
        start
}

_is_gdk_container_running() {
    (docker ps | grep " ${cont_name}" >/dev/null) || (echo "No GITLAB development container running"; exit 255)
}

gdk_container_run() {
    if [ ! _is_gdk_container_running ]; then
        return 0
    fi

    docker exec -ti ${cont_name} /usr/local/bin/run_bash $@
}

gdk_container_enter() {
    gdk_container_run
}

gdk() {
    case "$1" in
        start)
            gdk_container_start
            ;;
        stop)
            gdk_container_stop
            ;;
        enter)
            gdk_container_enter
            ;;
        run)
            shift 1
            gdk_container_run $@
            ;;
        redis_on_running)
            gdk_container_run foreman start redis
            ;;
        pg_on_running)
            gdk_container_run foreman start postgresql
            ;;
        cd)
            path=${SRC_PATH}
            if [ -n ${2} ]; then
                path="${path}/${2}"
            fi
            cd $path
            ;;
        refresh)
            source ${BASH_SOURCE[0]}
            ;;
        *)
            exit 0
            ;;
    esac
}

_gdk_comp() {
    local cur prev opts

    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="start stop enter run redis_on_running pg_on_running cd refresh"

    case "${prev}" in
        cd)
            local -a tokens
            local IFS=$'\n' x tmp quoted

            compopt -o nospace

            _quote_readline_by_ref "$cur" quoted
            x=$(compgen -d -- "${SRC_PATH}/${quoted}") &&
            while read -r tmp; do
                tokens+=( "$(echo ${tmp} | sed "s|${SRC_PATH}/||")/" )
            done <<< "${x}"

            if [[ ${#tokens[@]} -ne 0 ]]; then
                compopt -o filenames 2>/dev/null
                COMPREPLY+=( "${tokens[@]}" )
            fi

            return 0
            ;;
        *)
            ;;
    esac

    COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
    return 0
}

complete -F _gdk_comp gdk
